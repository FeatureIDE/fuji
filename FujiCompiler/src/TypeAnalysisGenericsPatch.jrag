/*
 * TODO remove this aspect when patched upstream.
 * 
 * In the following Java code:
 *
 * class Foo<T extends Number> {}
 *
 * "<T extends Number>" is an expression (Expr node). Calling hostType() on it should return
 * Foo as a host type, but it returns null.  The following code fixes the
 * problem.  It relies on equations in NestedTypes aspect
 * (Java1.4Frontend/TypeAnalysis.jrag).
 * 
 * Tests: ?
 */

//aspect NetstedTypes {
//    eq GenericTypeDecl.getTypeParameter().hostType() = hostType();
//}

/*
Upstream issue report:
hostType attribute of a type parameter in a generic type declaration has wrong value (fix provided)
Example code:

```
#!java

class Foo<T extends Param> {}
```
`T extends Param` is a type paramter of the generic type declaration `Foo`.  The value of the Param's `hostType` attribute should be `Foo`.  Currently it is `null`.

Fix: add the following code to, for example, Generics aspect in
java5/frontend/Generics.jrag
eq GenericTypeDecl.getTypeParameter().hostType() = hostType();
*/
