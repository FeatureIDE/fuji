MethodAccess:
-------------

Erklaerung:
-----------

Zugriff von FeatureA auf eine Methode des FeatureB.
(einmal statisch und einmal nicht-statisch) 


SubCases:
---------

01: FeatureB ist optional.
model:    Base : FeatureA [FeatureB] :: _Base ;
model-ok: Base : FeatureA [FeatureB] :: _Base ;
          %%
          FeatureA implies FeatureB ;

02: FeatureA und FeatureB schlieszen sich gegenseitig aus.
(durch zusaetzliches Constraint wird FeatureA getoetet.)
model:    Base : FeatureA | FeatureB :: _Base ;
model-ok: Base : FeatureA | FeatureB :: _Base ;
          %%
          FeatureA implies FeatureB ;
          
03: FeatureB2 implementiert die gleichen Typen wie FeatureB.
(2 (oder mehr) optionale Ziele fuer Methodenzugriff, Typzugriff)
model:    Base : FeatureA [FeatureB] [FeatureB2] :: _Base ;
model-ok: Base : FeatureA [FeatureB] [FeatureB2] :: _Base ;
          %%
          not FeatureB iff FeatureB2 ;