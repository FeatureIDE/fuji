layer Everything;import javax.swing.tree.DefaultMutableTreeNode;
import java.util.Properties;

SoUrCe RooT MailBase "../../../H:/Devolution/src/MailBase/AccountModel.jak";

public class AccountModel extends DefaultMutableTreeNode {

	private static final long serialVersionUID = -9045245386649872871L;
	private final String name;
	private Properties props;
	private boolean isNewAccount;


	public AccountModel ( final String name, boolean isNewAccount) {
		Super()();
		this.name = name;
		this.isNewAccount = isNewAccount;
	}

	public void addAlias ( final AccountModel aliass ) {
		if ( isAccount() ) {
			add( aliass );
			String as  = this.props.getProperty("aliases");
			if ( as != null ){
				as = as + aliass.toString() + ";";
			}
			else {
				as = aliass.toString() + ";";
			}
			this.props.put("aliases",as);
		}
	}

	public void removeAlias(){
		String as =  this.props.getProperty("aliases");
		if ( as != null ){
			as = as.replaceAll(this.name + ";", "");
		}
		this.props.put("aliases",as);
	}

	public void deleteAccount(){
		Account.deleteAccount(name);
		try{
			this.finalize();
		} catch (Throwable e){}
	}

	public boolean isAlias () {
		return !isRoot();
	}
	
	public boolean isAccount () {
		return isNewAccount;
	}

	public String toString () {
		return this.name;
	}

	public void setProperties(Properties props){
		this.props = props;
	}

	public Properties getProperties(){
		return this.props;
	}

	public AccountModel getAccountNode(){
		if (this.isAccount()) return this;
		else return ((AccountModel) this.getParent()).getAccountNode();
	}
}